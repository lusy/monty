TODOs
-----

Allgemein
---------

* aufgaben (refactor, create new)
* projekte
** idee: telefonbuch app/skript/program
* review all
* vereinheitlichen den deutsch/english shit
* ist es didaktisch sinnvoll
** if-else beispiele: sinnvollere beispiele?
** stehen "module" an der richtigen stelle? will man eine aufgabe dazu machen?

Konkreter
---------

* was ist python (/)
** links zu wikipedia-artikeln mit den begriffen
** was ist eigentlich script-Sprache? -- standalone programme, die bestimmte Aufgaben automatisieren und  vom nutzer 1 zu 1 ausgeführt werden können.
Umgebungen, die durch Skripting automatisiert werden können sind zB: Software Applications, Web Pages,Shells of Operating Systems.

* funktionen (können) parameter haben, können was returnen, müssen aber nicht (/)
* default values, named parameters (heißen die wirklich so -- ja; oder named arguments heißen die auch)(/)

* bsp zu break and continue (/)
* bsp zu with statement
* bsp zur main() function

* pydoc: slide zu? (/)
* dictionaries: wie nutzen (/)
* wie nutzt man tupeln (/) (mehr oder weniger)
** unpacking -- was genau meinen wir damit?? bzw wofür ist das gut?
* aufgaben zur funktionen -- einige hinzugefügt

* folie zu mutable/immutable datatypes? (/)
** primitive datatypes are immutable: int, bool, str, long,..
** tuples are also immutable
** lists and dictionaries are mutable!
*** attention! important to know when a second reference to the same object is created and when the object is copied

* is / is not (if type(myObject) is Point: )
** is tests identity; == tests equality
* folie zu isinstance() and type() (/)

* Mehrfachvererbung
** super

* regex
